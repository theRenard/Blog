import{_ as s,o as e,c as o,a}from"./app.f1d88a2f.js";const n="/assets/5-ways-to-move.348d6cf0.png",t="/assets/move.c356e57a.gif",F=JSON.parse('{"title":"Cocos Creator","titleTemplate":"Five ways to move an element in Cocos Creator","description":"Five ways to move an element in Cocos Creator","frontmatter":{"title":"Cocos Creator","titleTemplate":"Five ways to move an element in Cocos Creator","description":"Five ways to move an element in Cocos Creator","Author":"Daniele Tabanella","head":[["meta",{"name":"keywords","content":"cocos creator"}]],"Updated":"2022-12-16T00:00:00.000Z","lastUpdated":false,"image":"/images/5-ways-to-move.png","prev":"Get Started | Markdown"},"headers":[{"level":2,"title":"1. Position","slug":"_1-position","link":"#_1-position","children":[]},{"level":2,"title":"2. Translation","slug":"_2-translation","link":"#_2-translation","children":[]},{"level":2,"title":"3. Force","slug":"_3-force","link":"#_3-force","children":[]},{"level":2,"title":"4. Impulse","slug":"_4-impulse","link":"#_4-impulse","children":[]},{"level":2,"title":"5. Velocity","slug":"_5-velocity","link":"#_5-velocity","children":[]}],"relativePath":"articles/cocos-creator/five-ways-to-move-in-cocos-creator/index.md","lastUpdated":1672853740000}'),l={name:"articles/cocos-creator/five-ways-to-move-in-cocos-creator/index.md"},p=a('<p><img src="'+n+`" alt="5 ways to move in cocos creator"></p><h1 id="five-ways-to-move-an-element-in-cocos-creator" tabindex="-1">Five ways to move an element in Cocos Creator <a class="header-anchor" href="#five-ways-to-move-an-element-in-cocos-creator" aria-hidden="true">#</a></h1><p>One of the first things you&#39;ll want to do for your game is probably to move a sprite, an object, from point A to point B. There are various ways to move an element in Cocos Creator, some affect the <code>ridigBody</code> and the others on the position of the <code>Node</code>, let&#39;s see them together:</p><h2 id="_1-position" tabindex="-1">1. Position <a class="header-anchor" href="#_1-position" aria-hidden="true">#</a></h2><p>Changing the position of an element is probably the first solution, just assign a new position to the <code>Node</code>. The position is relative to the parent <code>Node</code>. Using position is like teleporting the element to a new position so it&#39;s not affected by the <code>RigidBody</code> or the <code>Physics</code> of the game. Strange things can happen if you use position and physics together (for instance partial or no collisions). You can use <code>setPosition</code> or <code>setWorldPosition</code> to set the position of the <code>Node</code>.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> newPosition </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPosition</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setPosition</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vec3</span><span style="color:#A6ACCD;">(newPosition</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> newPosition</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">y </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="_2-translation" tabindex="-1">2. Translation <a class="header-anchor" href="#_2-translation" aria-hidden="true">#</a></h2><p>Similar to position, but perform a translation instead of a teleport. The translation is relative to the parent <code>Node</code>. You can use a second parameter <code>nodeSpace</code> to set the coordinate space <code>WORLD</code> or <code>LOCAL</code>.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">translate</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vec3</span><span style="color:#A6ACCD;">(ammount</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> NodeSpace</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WORLD)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="_3-force" tabindex="-1">3. Force <a class="header-anchor" href="#_3-force" aria-hidden="true">#</a></h2><p>The force is applied to the <code>RigidBody</code> of the element. You can use <code>applyForceToCenter</code> or <code>applyForce</code> to apply the force to the center of the <code>RigidBody</code> or to a specific point. This is a literal pushing motion where the bigger the mass of the Object, the slower it will speed up. You can use a second parameter <code>wake</code> to wake up the <code>RigidBody</code> if it&#39;s sleeping. Force Add a continuous force to the rigidbody, using its mass.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">rigidBody</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">applyForceToCenter</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vec2</span><span style="color:#A6ACCD;">(ammount</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="_4-impulse" tabindex="-1">4. Impulse <a class="header-anchor" href="#_4-impulse" aria-hidden="true">#</a></h2><p>The impulse is applied to the <code>RigidBody</code> of the element. You can use <code>applyLinearImpulseToCenter</code> or <code>applyLinearImpulse</code> to apply the impulse to the center of the <code>RigidBody</code> or to a specific point. You can use a second parameter <code>wake</code> to wake up the <code>RigidBody</code> if it&#39;s sleeping. Impulse Add an instant force impulse to the rigidbody, using its mass.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">rigidBody</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">applyLinearImpulseToCenter</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vec2</span><span style="color:#A6ACCD;">(ammount</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="_5-velocity" tabindex="-1">5. Velocity <a class="header-anchor" href="#_5-velocity" aria-hidden="true">#</a></h2><p>The velocity is applied to the <code>RigidBody</code> of the element. You can use <code>linearVelocity</code> to set the velocity of the <code>RigidBody</code>. You can use a second parameter <code>wake</code> to wake up the <code>RigidBody</code> if it&#39;s sleeping.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">rigidBody</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">linearVelocity </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vec2</span><span style="color:#A6ACCD;">(velocity</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> ammount</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> velocity</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">y)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><img src="`+t+'" alt="image"></p>',19),c=[p];function i(r,d,y,C,D,A){return e(),o("div",null,c)}const m=s(l,[["render",i]]);export{F as __pageData,m as default};
